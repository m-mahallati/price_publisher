services:
  # Your existing publishers
  bingx-publisher:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.price_publisher
    container_name: bingx-price-publisher
    environment:
      EXCHANGE_NAME: bingx
      ZMQ_PUSH_ENDPOINT: tcp://zmq-proxy:5546
      TRADING_PAIRS: XAUT-USDT,DOGE-USDT,ETH-USDT
      URL_BINGX: wss://open-api-swap.bingx.com/swap-market
      LOG_DIR: /var/log/crypto
      TZ: Asia/Tehran    
    volumes:
      - ../logs:/app/logs
      - /usr/share/zoneinfo/Asia/Tehran:/etc/localtime:ro  
    restart: unless-stopped
    depends_on:
      zmq-proxy:
        condition: service_healthy
    networks:
      - crypto-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  
  zmq-proxy:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.zmq_proxy
    container_name: zmq-proxy
    ports:
      - "5545:5545"  # Frontend (PUB) - for subscribers
      - "5546:5546"  # Backend (PULL) - for publishers
      - "8000:8000"  # Metrics endpoint
    environment:
      - LOG_LEVEL=INFO
      - TZ=Asia/Tehran
    volumes:
      - /usr/share/zoneinfo/Asia/Tehran:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - crypto-net
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # binance-publisher:
  #   build:
  #     context: .
  #     dockerfile: dockerfiles/Dockerfile.price_publisher
  #   container_name: binance-price-publisher
  #   environment:
  #     EXCHANGE_NAME: binance
  #     ZMQ_PUB_ENDPOINT: tcp://zmq-proxy:5556  # Changed to point to proxy
  #     TRADING_PAIRS: dogeusdt@trade/ethusdt@trade/btcusdt@trade/solusdt@trade/xrpusdt@trade/tonusdt@trade
  #     LOG_DIR: /var/log/crypto
  #   restart: unless-stopped
  #   networks:
  #     - crypto-net
  #   depends_on:
  #     - zmq-proxy

  # ZMQ Proxy Service

  # Optional monitoring stack
#   prometheus:
#     image: prom/prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Add this volume
#     depends_on:
#       - zmq-proxy
#     networks:
#       - crypto-net

#   grafana:
#     image: grafana/grafana
#     ports:
#       - "3000:3000"
#     environment:
#       - GF_SECURITY_ADMIN_PASSWORD=admin  # Set default admin password
#       - GF_USERS_ALLOW_SIGN_UP=false
#     volumes:
#       - grafana-storage:/var/lib/grafana
#     depends_on:
#       - prometheus
#     networks:
#       - crypto-net

# volumes:
#   grafana-storage:

networks:
  crypto-net:
    driver: bridge